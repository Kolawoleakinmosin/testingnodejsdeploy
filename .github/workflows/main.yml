name: build-and-deploy

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 383265273024.dkr.ecr.us-east-1.amazonaws.com
  IMAGE_NAME: your-image-name
  KUBECONFIG: ${{ secrets.KUBECONFIG }}
  CR_PAT: ${{ secrets.CR_PAT }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
      id: build-image
      uses: docker/build-push-action@v2
      with:
        context: .
        dockerfile: Dockerfile
        push: true
        tags: |
          ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    - name: Login to GHCR
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    - name: Deploy to Kubernetes
      uses: docker://docker.io/k8sathome/kubernetes-cli:v1.22.0
      with:
        args: |
          apply -f k8s/deployment.yaml
          set image deployment/your-deployment-name your-container-name=${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          rollout status deployment/your-deployment-name
      env:
        KUBECONFIG: ${{ env.KUBECONFIG }}

